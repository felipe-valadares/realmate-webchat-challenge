   services:
     db:
       image: postgres:15
       environment:
         POSTGRES_DB: ${POSTGRES_DB:-postgres}
         POSTGRES_USER: ${POSTGRES_USER:-postgres}
         POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
         POSTGRES_PORT: ${POSTGRES_PORT:-5432}
       volumes:
         - pgdata:/var/lib/postgresql/data
     redis:
       image: redis:7
       healthcheck:
         test: ["CMD", "redis-cli", "ping"]
         interval: 10s
         timeout: 5s
         retries: 5
     web:
       build:
         context: .
         dockerfile: dockerfile
       command: >
         sh -c "python manage.py makemigrations --noinput && \
                python manage.py migrate && \
                daphne -b 0.0.0.0 -p 8000 realmate_challenge.asgi:application"
       volumes:
         - .:/app
       ports:
         - '8000:8000'
       environment:
         POSTGRES_HOST: ${POSTGRES_HOST:-db}
         POSTGRES_DB: ${POSTGRES_DB:-postgres}
         POSTGRES_USER: ${POSTGRES_USER:-postgres}
         POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
         POSTGRES_PORT: ${POSTGRES_PORT:-5432}
         REDIS_URL: ${REDIS_URL:-redis://redis:6379/0}
         CELERY_BROKER_URL: ${CELERY_BROKER_URL:-redis://redis:6379/0}
       depends_on:
         - db
         - redis
     celery:
       build:
         context: .
         dockerfile: dockerfile
       env_file:
         - .env
       command:
         - celery
         - -A
         - realmate_challenge
         - worker
         - --loglevel=info
       volumes:
         - .:/app
       environment:
         POSTGRES_HOST: ${POSTGRES_HOST:-db}
         POSTGRES_DB: ${POSTGRES_DB:-postgres}
         POSTGRES_USER: ${POSTGRES_USER:-postgres}
         POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
         POSTGRES_PORT: ${POSTGRES_PORT:-5432}
         REDIS_URL: ${REDIS_URL:-redis://redis:6379/0}
         CELERY_BROKER_URL: ${CELERY_BROKER_URL:-redis://redis:6379/0}
       depends_on:
         db:
           condition: service_started
         redis:
           condition: service_healthy
     frontend:
       image: node:18-alpine
       working_dir: /app
       volumes:
         - ./realmate_challenge/frontend:/app
       ports:
         - "3000:3000"
       environment:
         - HOST=0.0.0.0
         - PORT=3000
       command: sh -c "npm install && npm run dev -- -H 0.0.0.0"
       depends_on:
         - web

   volumes:
     pgdata:
